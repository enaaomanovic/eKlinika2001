// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKlinika.Services.Context;

#nullable disable

namespace eKlinika.Services.Migrations
{
    [DbContext(typeof(eKlinikaContext))]
    partial class eKlinikaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eKlinika.Services.Database.Ljekar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Titula")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ljekari");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Ime = "John",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Smith",
                            Sifra = "JS123",
                            Titula = 0,
                            Username = "john"
                        },
                        new
                        {
                            Id = 3,
                            Ime = "Emily",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Davis",
                            Sifra = "ED456",
                            Titula = 2,
                            Username = "emily"
                        },
                        new
                        {
                            Id = 4,
                            Ime = "Michael",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Johnson",
                            Sifra = "MJ789",
                            Titula = 0,
                            Username = "michael"
                        },
                        new
                        {
                            Id = 5,
                            Ime = "Sophia",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Miller",
                            Sifra = "SM234",
                            Titula = 1,
                            Username = "sophia"
                        },
                        new
                        {
                            Id = 6,
                            Ime = "Daniel",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Brown",
                            Sifra = "DB567",
                            Titula = 0,
                            Username = "daniel"
                        },
                        new
                        {
                            Id = 7,
                            Ime = "Olivia",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Taylor",
                            Sifra = "OT890",
                            Titula = 2,
                            Username = "olivia"
                        },
                        new
                        {
                            Id = 8,
                            Ime = "Benjamin",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Anderson",
                            Sifra = "BA345",
                            Titula = 0,
                            Username = "benjamin"
                        },
                        new
                        {
                            Id = 9,
                            Ime = "Ljekar",
                            LozinkaHash = new byte[] { 205, 173, 238, 240, 123, 28, 44, 53, 56, 164, 63, 104, 173, 124, 252, 68, 180, 14, 228, 115 },
                            LozinkaSalt = new byte[] { 0, 15, 217, 112, 57, 244, 61, 193, 39, 247, 215, 237, 250, 28, 45, 120 },
                            Prezime = "Ljekar",
                            Sifra = "BR845",
                            Titula = 0,
                            Username = "ljekar"
                        });
                });

            modelBuilder.Entity("eKlinika.Services.Database.Nalaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumIVrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrijemPacijentaId")
                        .HasColumnType("int");

                    b.Property<string>("TekstualniOpis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrijemPacijentaId");

                    b.ToTable("Nalazi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumIVrijemeKreiranja = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrijemPacijentaId = 1,
                            TekstualniOpis = "Nalaz 1"
                        },
                        new
                        {
                            Id = 2,
                            DatumIVrijemeKreiranja = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrijemPacijentaId = 2,
                            TekstualniOpis = "Nalaz 2"
                        },
                        new
                        {
                            Id = 3,
                            DatumIVrijemeKreiranja = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrijemPacijentaId = 3,
                            TekstualniOpis = "Nalaz 3"
                        },
                        new
                        {
                            Id = 4,
                            DatumIVrijemeKreiranja = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrijemPacijentaId = 4,
                            TekstualniOpis = "Nalaz 4"
                        },
                        new
                        {
                            Id = 5,
                            DatumIVrijemeKreiranja = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrijemPacijentaId = 5,
                            TekstualniOpis = "Nalaz 5"
                        });
                });

            modelBuilder.Entity("eKlinika.Services.Database.Pacijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pacijenti");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Adresa = "123 Elm Street",
                            BrojTelefona = "062123456",
                            DatumRodjenja = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "John",
                            Prezime = "Doe",
                            Spol = 0
                        },
                        new
                        {
                            Id = 3,
                            Adresa = "456 Oak Avenue",
                            BrojTelefona = "063987654",
                            DatumRodjenja = new DateTime(1985, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Jane",
                            Prezime = "Smith",
                            Spol = 1
                        },
                        new
                        {
                            Id = 4,
                            Adresa = "789 Maple Road",
                            BrojTelefona = "064654321",
                            DatumRodjenja = new DateTime(1978, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Michael",
                            Prezime = "Johnson",
                            Spol = 0
                        },
                        new
                        {
                            Id = 5,
                            Adresa = "567 Pine Avenue",
                            BrojTelefona = "065987654",
                            DatumRodjenja = new DateTime(1983, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Emily",
                            Prezime = "Davis",
                            Spol = 1
                        },
                        new
                        {
                            Id = 6,
                            Adresa = "234 Cedar Lane",
                            BrojTelefona = "066123987",
                            DatumRodjenja = new DateTime(1995, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Daniel",
                            Prezime = "Brown",
                            Spol = 0
                        },
                        new
                        {
                            Id = 7,
                            Adresa = "890 Birch Street",
                            BrojTelefona = "067456123",
                            DatumRodjenja = new DateTime(1972, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Sophia",
                            Prezime = "Miller",
                            Spol = 1
                        },
                        new
                        {
                            Id = 8,
                            Adresa = "345 Oak Lane",
                            BrojTelefona = "068321654",
                            DatumRodjenja = new DateTime(1980, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "David",
                            Prezime = "Wilson",
                            Spol = 0
                        },
                        new
                        {
                            Id = 9,
                            Adresa = "678 Elm Avenue",
                            BrojTelefona = "069987654",
                            DatumRodjenja = new DateTime(1992, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ime = "Olivia",
                            Prezime = "Taylor",
                            Spol = 1
                        });
                });

            modelBuilder.Entity("eKlinika.Services.Database.PrijemPacijenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumIVrijemePrijema")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HitniPrijem")
                        .HasColumnType("bit");

                    b.Property<int?>("NadlezniLjekarId")
                        .HasColumnType("int");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NadlezniLjekarId");

                    b.HasIndex("PacijentId");

                    b.ToTable("PrijemPacijenta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = false,
                            NadlezniLjekarId = 2,
                            PacijentId = 2
                        },
                        new
                        {
                            Id = 2,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = true,
                            NadlezniLjekarId = 3,
                            PacijentId = 2
                        },
                        new
                        {
                            Id = 3,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = false,
                            NadlezniLjekarId = 4,
                            PacijentId = 3
                        },
                        new
                        {
                            Id = 4,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 14, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = true,
                            NadlezniLjekarId = 5,
                            PacijentId = 4
                        },
                        new
                        {
                            Id = 5,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 10, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = false,
                            NadlezniLjekarId = 6,
                            PacijentId = 5
                        },
                        new
                        {
                            Id = 6,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 5, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = true,
                            NadlezniLjekarId = 7,
                            PacijentId = 6
                        },
                        new
                        {
                            Id = 7,
                            DatumIVrijemePrijema = new DateTime(2024, 3, 1, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = false,
                            NadlezniLjekarId = 8,
                            PacijentId = 7
                        },
                        new
                        {
                            Id = 8,
                            DatumIVrijemePrijema = new DateTime(2024, 2, 26, 3, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = true,
                            NadlezniLjekarId = 9,
                            PacijentId = 8
                        },
                        new
                        {
                            Id = 9,
                            DatumIVrijemePrijema = new DateTime(2024, 2, 22, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = false,
                            NadlezniLjekarId = 3,
                            PacijentId = 4
                        },
                        new
                        {
                            Id = 10,
                            DatumIVrijemePrijema = new DateTime(2024, 2, 18, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            HitniPrijem = true,
                            NadlezniLjekarId = 4,
                            PacijentId = 2
                        });
                });

            modelBuilder.Entity("eKlinika.Services.Database.Nalaz", b =>
                {
                    b.HasOne("eKlinika.Services.Database.PrijemPacijenta", "PrijemPacijenta")
                        .WithMany()
                        .HasForeignKey("PrijemPacijentaId");

                    b.Navigation("PrijemPacijenta");
                });

            modelBuilder.Entity("eKlinika.Services.Database.PrijemPacijenta", b =>
                {
                    b.HasOne("eKlinika.Services.Database.Ljekar", "NadlezniLjekar")
                        .WithMany()
                        .HasForeignKey("NadlezniLjekarId");

                    b.HasOne("eKlinika.Services.Database.Pacijent", "Pacijent")
                        .WithMany()
                        .HasForeignKey("PacijentId");

                    b.Navigation("NadlezniLjekar");

                    b.Navigation("Pacijent");
                });
#pragma warning restore 612, 618
        }
    }
}
